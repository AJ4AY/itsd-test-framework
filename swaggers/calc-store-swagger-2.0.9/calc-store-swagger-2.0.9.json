{
  "swagger": "2.0",
  "info": {
    "description": "The Calculation Store service provides the create operation to store the outcome of a  calculation request and the ability to retrieve calculations from the store. It also supplies an update capability for the annotation of the ETMP bundle ID and to denote  a crystallised calculation.  the calculation data will contain references to the source data used to perform the calculation, any cumulative figures calculated as part of the calculation, any forecasted  figures calculated as part of the calculation and the result of the calculation. The result of a calculation may also consist of a set of business validation errors which prevented the calculation from being performed or a determined liability. ",
    "version": "2.0.9",
    "title": "Calculation Store"
  },
  "host": "calculation-store:8001",
  "basePath": "/",
  "tags": [
    {
      "name": "External",
      "description": "APIs exposed to DES via the API Gateway"
    },
    {
      "name": "Calculation Store",
      "description": "All Calculation Store operations"
    }
  ],
  "paths": {
    "/calculations/liability/{taxEntityId}/{calcId}": {
      "get": {
        "tags": [
          "External",
          "Calculation Store"
        ],
        "summary": "API#24 - Get Calculation Data",
        "description": "This is an externally facing API that retrieves the calculation result in full for a  given taxpater ID (i.e. NINO) and calculation ID. This will also include any BVR errors and warnings",
        "operationId": "getCalculationById",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/TaxEntityId"
          },
          {
            "$ref": "#/parameters/CalcId"
          }
        ],
        "responses": {
          "200": {
            "description": "The calculation result has been found.",
            "schema": {
              "$ref": "#/definitions/liabilityCalculation"
            }
          },
          "401": {
            "description": "The user has not supplied the correct credentials to access this service. Please ensure your credentials are  correct before retrying this operation. "
          },
          "404": {
            "description": "The service has been unable to find a calculation response for the given id associated with the identifier supplied. This maybe a temporary situation as the calculation process may not have completed yet. Please try again later. "
          },
          "502": {
            "description": "The service is experiencing temporary difficulties in handling your request, please try again later."
          }
        }
      },
      "post": {
        "tags": [
          "Calculation Store"
        ],
        "summary": "Post Calculation Data",
        "description": "This is a sub-domain only API called by the Calculation microservice to post the  calculation result. This may include warning and errors generated by business  validation rules (BVRs)  ",
        "operationId": "createCalculation",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/TaxEntityId"
          },
          {
            "$ref": "#/parameters/CalcId"
          },
          {
            "in": "body",
            "name": "calculation",
            "description": "The calculation response to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/liabilityCalculation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The calculation request has been successfully created."
          },
          "401": {
            "description": "The user has not supplied the correct credentials to access this service. Please ensure your credentials are  correct before retrying this operation. "
          },
          "409": {
            "description": "The requested resource already exists, this operation does not support the update of existing resources. "
          },
          "422": {
            "description": "Unprocessable Entity - see error code and description for reason.  Valid error code values are\n  3000 - Input schema validation errors",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "502": {
            "description": "The service is experiencing temporary difficulties in handling your request, please try again later."
          }
        }
      }
    },
    "/calculations/liability/{taxYear}/latest/{taxEntityId}": {
      "get": {
        "tags": [
          "External",
          "Calculation Store"
        ],
        "summary": "API#19 Get Last Calculation",
        "description": "An external facing API that retrieves the high level data of the last successful calculation (i.e. with no BVR errors) for the given taxpayer ID (i.e. NINO) and Tax Year.",
        "operationId": "getLatestCalculation",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/TaxEntityId"
          },
          {
            "$ref": "#/parameters/TaxYear"
          }
        ],
        "responses": {
          "200": {
            "description": "The calculation result has been found.",
            "schema": {
              "$ref": "#/definitions/liabilityCalculation"
            }
          },
          "401": {
            "description": "The user has not supplied the correct credentials to access this service. Please ensure your credentials are  correct before retrying this operation. "
          },
          "404": {
            "description": "The service has been unable to find a calculation response for the given id associated with the identifier supplied. This maybe a temporary situation as the calculation process may not have completed yet. Please try again later. "
          },
          "502": {
            "description": "The service is experiencing temporary difficulties in handling your request, please try again later."
          }
        }
      }
    },
    "/calculations/liability/{taxEntityId}/{calcId}/{bundleId}": {
      "patch": {
        "tags": [
          "External",
          "Calculation Store"
        ],
        "summary": "API#23 - Post ETMP Bundle ID",
        "description": "An external facing API to allow the update an existing calculation record with  the ETMP Form Bundle Id; sent when ETMP accepts the published calculation result. This provides tracability between the calculation and ETMP.",
        "operationId": "updateBundleId",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/TaxEntityId"
          },
          {
            "$ref": "#/parameters/CalcId"
          },
          {
            "name": "bundleId",
            "in": "path",
            "description": "The ETMP Bundle Id to associate with the calculation response.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The bundle id has been succesfully associated with the calculation response."
          },
          "401": {
            "description": "The user has not supplied the correct credentials to access this service. Please ensure your credentials are  correct before retrying this operation. "
          },
          "404": {
            "description": "The service has been unable to find a calculation response for the given id associated with the identifier supplied. This maybe a temporary situation as the calculation process may not have completed yet. Please try again later. "
          },
          "502": {
            "description": "The service is experiencing temporary difficulties in handling your request, please try again later."
          }
        }
      }
    },
    "/calculations/liability/{taxEntityId}": {
      "get": {
        "tags": [
          "External",
          "Calculation Store"
        ],
        "summary": "API#39 - Get Calculation List",
        "description": "Retrieve a list of calculations for the given taxpayer and Tax Year (if supplied). If the year is not specified then it defaults to the current year. The list consists of a set of high level data items for each calculation presented in chronological order",
        "operationId": "getCalculationsForIdentifier",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/TaxEntityId"
          },
          {
            "$ref": "#/parameters/TaxYearQuery"
          }
        ],
        "responses": {
          "200": {
            "description": "The tax payer is associated with one or more calculation responses for the given tax year.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/calcList"
              }
            }
          },
          "401": {
            "description": "The user has not supplied the correct credentials to access this service. Please ensure your credentials are  correct before retrying this operation. "
          },
          "404": {
            "description": "The service has been unable to find a calculation response for the given id associated with the identifier supplied. This maybe a temporary situation as the calculation process may not have completed yet. Please try again later. "
          },
          "502": {
            "description": "The service is experiencing temporary difficulties in handling your request, please try again later."
          }
        }
      }
    },
    "/calculations/liability/{taxEntityId}/{calcId}/crystallise": {
      "patch": {
        "tags": [
          "Calculation Store"
        ],
        "summary": "Update calculation as crystallised",
        "description": "An internal facing API to allow the update an existing calculation record as being crystallised. This will set the crystallised indicator to true and record the crytallisation timestamp.",
        "operationId": "updateAsCrystallised",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/TaxEntityId"
          },
          {
            "$ref": "#/parameters/CalcId"
          },
          {
            "name": "crystallisation",
            "in": "body",
            "description": "The calculation response to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/crystallisation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The calculation has been marked as crystallised."
          },
          "401": {
            "description": "The user has not supplied the correct credentials to access this service. Please ensure your credentials are  correct before retrying this operation. "
          },
          "404": {
            "description": "The service has been unable to find a calculation response for the given id associated with the identifier supplied. This maybe a temporary situation as the calculation process may not have completed yet. Please try again later. "
          },
          "422": {
            "description": "Unprocessable Entity - see error code and description for reason.  Valid error code values are\n  3000 - Input schema validation errors",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "502": {
            "description": "The service is experiencing temporary difficulties in handling your request, please try again later."
          }
        }
      }
    }
  },
  "parameters": {
    "TaxEntityId": {
      "in": "path",
      "name": "taxEntityId",
      "type": "string",
      "description": "Unique identity of the tax entity to which the income source must relate.",
      "required": true,
      "maxLength": 16,
      "pattern": "^[a-zA-Z0-9]+$"
    },
    "CalcId": {
      "in": "path",
      "name": "calcId",
      "type": "string",
      "required": true,
      "description": "The Calculation ID",
      "pattern": "^[0-9]{8}|[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
    },
    "TaxYear": {
      "in": "path",
      "name": "taxYear",
      "description": "The tax year the request is for. NB. The is the year in which the Tax year ends (e.g. 2018 relates to Tax Year 2017-2018)",
      "required": true,
      "type": "integer",
      "minimum": 2016,
      "maximum": 2999
    },
    "TaxYearQuery": {
      "in": "query",
      "name": "taxYear",
      "description": "The tax year the query is for. NB. The is the year in which the Tax year ends (e.g. 2018 relates to Tax Year 2017-2018)",
      "required": false,
      "type": "integer",
      "minimum": 2016,
      "maximum": 2999
    }
  },
  "definitions": {
    "liabilityCalculation": {
      "description": "The result of an income tax calculation.",
      "type": "object",
      "required": [
        "calcID"
      ],
      "properties": {
        "calcID": {
          "$ref": "#/definitions/calcIdString",
          "description": "The calculation ID – this is either 8 digit value with leading zeros (legacy calculation ID) or a UUID from April 2018."
        },
        "calcTimestamp": {
          "$ref": "#/definitions/timestampString",
          "description": "The timestamp of when the calculation was performed."
        },
        "calcType": {
          "type": "string",
          "minLength": 2,
          "maxLength": 5,
          "description": "The type of calculation (e.g. 'it'for Income tax)"
        },
        "calcName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 32,
          "description": "The logical name of the calculator"
        },
        "calcVersion": {
          "type": "string",
          "minLength": 1,
          "maxLength": 10,
          "description": "The version number of the calculation"
        },
        "calcVersionDate": {
          "$ref": "#/definitions/dateString",
          "description": "Date the calculator version became active"
        },
        "calcAmount": {
          "$ref": "#/definitions/monetaryPosNeg",
          "description": "The high level calculated amount.  For Income Tax this is the total amount of Income Tax and national Insurance."
        },
        "calcResult": {
          "$ref": "#/definitions/calcResult"
        },
        "calcSummary": {
          "$ref": "#/definitions/calcSummary"
        },
        "bvrTimestamp": {
          "$ref": "#/definitions/timestampString",
          "description": "The timestamp of when business validation rules were applied"
        },
        "bvrVersion": {
          "type": "string",
          "minLength": 1,
          "maxLength": 10,
          "description": "The version number of the business validation rules ruleset"
        },
        "bvrErrors": {
          "type": "number",
          "description": "the number of BVR errors"
        },
        "bvrWarnings": {
          "type": "number",
          "description": "the number of BVR warnings"
        },
        "bvrMsg": {
          "$ref": "#/definitions/bvrMessages"
        },
        "sourceName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 32,
          "description": "The name of the source system that requested the calculation."
        },
        "sourceRef": {
          "type": "string",
          "minLength": 1,
          "maxLength": 32,
          "description": "Internal reference from source system (for traceability purposes)."
        },
        "identifier": {
          "type": "string",
          "description": "Identifies the taxpayer for whom the calculation was performed.",
          "minLength": 1,
          "maxLength": 16,
          "pattern": "^[a-zA-Z0-9]+$"
        },
        "year": {
          "type": "number",
          "minimum": 2016,
          "maximum": 2999,
          "description": "This identifies the Tax Year to which the calculation relates in the format yyyy. NB. this is the ending year (e.g. Tax Year 2017-2018 would be expressed as 2018)"
        },
        "incomeSources": {
          "$ref": "#/definitions/incomeSources"
        },
        "periodFrom": {
          "$ref": "#/definitions/dateString",
          "description": "This defines the earliest point from which the calculation was performed. This will be the Accounting period start date (for self-employments) or the tax year start date, whichever  occurs first."
        },
        "periodTo": {
          "$ref": "#/definitions/dateString",
          "description": "This defines the latest point to which the calculation was performed and will be the point  in the year to which income has been received."
        },
        "bundleId": {
          "type": "array",
          "description": "A collection of form bundle IDs associated to the calculation The first form bundle ID will relate to initial published calculation A secondary value will retae to the republished calculation such as a  declared crystallisation",
          "items": {
            "type": "string",
            "description": "ETMP form bundle ID"
          }
        },
        "intentToCrystallise": {
          "type": "boolean",
          "description": "Defines if this calculation is provided with the intent to crystallise"
        },
        "crystallised": {
          "type": "boolean",
          "description": "Defines if crystallisation has been declared against this calculation"
        },
        "crystallisationTimestamp": {
          "$ref": "#/definitions/timestampString",
          "description": "The timestamp of when crystallisation was declared"
        },
        "variablesVersion": {
          "type": "string",
          "description": "The version of the variables used for the calculation."
        },
        "variablesVersionDate": {
          "$ref": "#/definitions/dateString",
          "description": "The date that the version of the variables used for the calculation were created."
        }
      }
    },
    "calcResult": {
      "description": "An object containing the calculated result",
      "type": "object",
      "required": [
        "incomeTaxNicYtd",
        "incomeTaxNicDelta",
        "nationalRegime",
        "totalTaxableIncome",
        "taxableIncome",
        "totalIncomeTax",
        "incomeTax",
        "totalNic",
        "msgCount",
        "annualAllowances"
      ],
      "additionalProperties": false,
      "properties": {
        "incomeTaxNicYtd": {
          "$ref": "#/definitions/monetaryPosNeg",
          "description": "Total of calculated Income Tax and National Insurance year to date"
        },
        "incomeTaxNicDelta": {
          "$ref": "#/definitions/monetaryPosNeg",
          "description": "Difference between the total of calculated Income Tax and National Insurance in  this calculation and the previous calculation performed for the same Tax Year"
        },
        "nationalRegime": {
          "type": "string",
          "enum": [
            "UK",
            "Scotland"
          ],
          "description": "This defines the national tax rates and rules to be applied. Values are UK and Scotland"
        },
        "totalTaxableIncome": {
          "$ref": "#/definitions/monetaryPos",
          "description": "Total Taxable Income. This is Total Income Received less the Total of  Allowances and Deductions"
        },
        "taxableIncome": {
          "$ref": "#/definitions/taxableIncome"
        },
        "totalIncomeTax": {
          "$ref": "#/definitions/monetaryPos",
          "description": "Total calculated Income Tax after allowances and reliefs"
        },
        "incomeTax": {
          "$ref": "#/definitions/incomeTax"
        },
        "totalNic": {
          "$ref": "#/definitions/monetaryPos",
          "description": "Total of calculated National Insurance Contributions"
        },
        "nic": {
          "$ref": "#/definitions/nic"
        },
        "totalBeforeTaxDeducted": {
          "$ref": "#/definitions/monetaryPos",
          "description": "The subtotal of Income Tax and National Insurance before tax deducted"
        },
        "totalTaxDeducted": {
          "$ref": "#/definitions/monetaryPos",
          "description": "The total of any tax deducted"
        },
        "taxDeducted": {
          "$ref": "#/definitions/taxDeducted"
        },
        "eoyEstimate": {
          "$ref": "#/definitions/eoyEstimate"
        },
        "msgCount": {
          "type": "number",
          "description": "Count of calculation information messages"
        },
        "msg": {
          "$ref": "#/definitions/calcMessages"
        },
        "previousCalc": {
          "$ref": "#/definitions/previousCalc"
        },
        "annualAllowances": {
          "$ref": "#/definitions/annualAllowances"
        }
      }
    },
    "taxableIncome": {
      "description": "An object that breaks down how taxable income is derived",
      "type": "object",
      "required": [
        "totalIncomeReceived",
        "totalAllowancesAndDeductions",
        "allowancesAndDeductions"
      ],
      "additionalProperties": false,
      "properties": {
        "totalIncomeReceived": {
          "$ref": "#/definitions/monetaryPos",
          "description": "The total of income received for the Tax Year"
        },
        "incomeReceived": {
          "$ref": "#/definitions/incomeReceived"
        },
        "totalAllowancesAndDeductions": {
          "$ref": "#/definitions/monetaryPos",
          "description": "Total of allowances and deductions for the Tax Year"
        },
        "allowancesAndDeductions": {
          "$ref": "#/definitions/allowancesAndDeductions"
        }
      }
    },
    "incomeReceived": {
      "description": "An object that breaks down income received by income source",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "employmentIncome": {
          "$ref": "#/definitions/monetaryPos",
          "description": "Total taxable profit for all employments"
        },
        "employments": {
          "$ref": "#/definitions/employmentsIncome"
        },
        "selfEmploymentIncome": {
          "$ref": "#/definitions/monetaryPos",
          "description": "Total taxable profit for all self-employments"
        },
        "selfEmployment": {
          "$ref": "#/definitions/selfEmploymentIncome"
        },
        "ukPropertyIncome": {
          "$ref": "#/definitions/monetaryPos",
          "description": "Total taxable profit from all UK land and property"
        },
        "ukProperty": {
          "$ref": "#/definitions/ukPropertyIncome"
        },
        "bbsiIncome": {
          "$ref": "#/definitions/monetaryPos",
          "description": "The taxable amount of interest from UK banks, building societies  and securities etc"
        },
        "bbsi": {
          "$ref": "#/definitions/incomeSource"
        },
        "ukDividendIncome": {
          "$ref": "#/definitions/monetaryPos",
          "description": "Amount of taxable income from dividends from UK companies"
        },
        "ukDividends": {
          "$ref": "#/definitions/incomeSource"
        }
      }
    },
    "employmentsIncome": {
      "description": "An object that summerises income for all employments in the Tax Year",
      "type": "object",
      "required": [
        "totalPay",
        "totalBenefitsAndExpenses",
        "totalAllowableExpenses",
        "employment"
      ],
      "additionalProperties": false,
      "properties": {
        "totalPay": {
          "$ref": "#/definitions/monetaryPos",
          "description": "Net pay from all Employments"
        },
        "totalBenefitsAndExpenses": {
          "$ref": "#/definitions/monetaryPos",
          "description": "Total of Benefits and Expenses from all employments"
        },
        "totalAllowableExpenses": {
          "$ref": "#/definitions/monetaryPos",
          "description": "Total allowable expenses across all employments"
        },
        "employment": {
          "$ref": "#/definitions/employmentIncome"
        }
      }
    },
    "employmentIncome": {
      "description": "Provides the taxable income for each individual employment",
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "incomeSourceID",
          "latestDate",
          "netPay",
          "benefitsAndExpenses",
          "allowableExpenses"
        ],
        "properties": {
          "incomeSourceID": {
            "type": "string",
            "description": "Identifies the employment"
          },
          "latestDate": {
            "$ref": "#/definitions/dateString",
            "description": "The latest date to which source data applies"
          },
          "netPay": {
            "$ref": "#/definitions/monetaryPos",
            "description": "The net pay YTD for the employment"
          },
          "benefitsAndExpenses": {
            "$ref": "#/definitions/monetaryPos",
            "description": "Benefits and expenses relating to the employment"
          },
          "allowableExpenses": {
            "$ref": "#/definitions/monetaryPos",
            "description": "Allowable expenses relating to the employment"
          }
        }
      }
    },
    "selfEmploymentIncome": {
      "description": "Provides the taxable income for each individual self-employment",
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "incomeSourceID",
          "latestDate",
          "taxableIncome"
        ],
        "properties": {
          "incomeSourceID": {
            "type": "string",
            "description": "Identifies the self-employment income source"
          },
          "latestDate": {
            "$ref": "#/definitions/dateString",
            "description": "The latest date to which source data applies"
          },
          "accountStartDate": {
            "$ref": "#/definitions/dateString",
            "description": "The laccounting period start date"
          },
          "accountEndDate": {
            "$ref": "#/definitions/dateString",
            "description": "The accounting period end date"
          },
          "taxableIncome": {
            "$ref": "#/definitions/monetaryPos",
            "description": "The taxable profit from this self-employment"
          },
          "finalised": {
            "type": "boolean",
            "description": "Indicates if the taxable income for this self-employment is finalised for the Tax Year"
          },
          "losses": {
            "$ref": "#/definitions/monetaryPos",
            "description": "Losses from this self employment to be carried forward"
          }
        }
      }
    },
    "ukPropertyIncome": {
      "type": "object",
      "required": [
        "incomeSourceID",
        "latestDate"
      ],
      "additionalProperties": false,
      "properties": {
        "incomeSourceID": {
          "type": "string",
          "description": "Source identifier"
        },
        "latestDate": {
          "$ref": "#/definitions/dateString",
          "description": "The latest date to which source data applies"
        },
        "taxableProfit": {
          "$ref": "#/definitions/monetaryPos",
          "description": "The taxable profit for property excluding furnished holiday lettings"
        },
        "taxableProfitFhlUk": {
          "$ref": "#/definitions/monetaryPos",
          "description": "The taxable profit for UK furnished holiday lettings"
        },
        "taxableProfitFhlEea": {
          "$ref": "#/definitions/monetaryPos",
          "description": "The taxable profit for EEA furnished holiday lettings"
        },
        "finalised": {
          "type": "boolean",
          "description": "Indicates if the taxable income for all UK property is finalised"
        },
        "losses": {
          "$ref": "#/definitions/monetaryPos",
          "description": "Losses for property (non-FHL) carried forward"
        },
        "lossesFhlUk": {
          "$ref": "#/definitions/monetaryPos",
          "description": "Losses for FHL property (UK) carried forward"
        },
        "lossesFhlEea": {
          "$ref": "#/definitions/monetaryPos",
          "description": "Losses for FHL property (EEA) carried forward"
        }
      }
    },
    "incomeSource": {
      "type": "object",
      "required": [
        "incomeSourceID",
        "latestDate"
      ],
      "additionalProperties": false,
      "properties": {
        "incomeSourceID": {
          "type": "string",
          "description": "Source identifier"
        },
        "latestDate": {
          "$ref": "#/definitions/dateString",
          "description": "The latest date to which source data applies"
        }
      }
    },
    "allowancesAndDeductions": {
      "type": "object",
      "required": [
        "apportionedPersonalAllowance"
      ],
      "additionalProperties": false,
      "properties": {
        "giftOfInvestmentsAndPropertyToCharity": {
          "$ref": "#/definitions/monetaryPos",
          "description": "Gift of investments and property to charity"
        },
        "apportionedPersonalAllowance": {
          "$ref": "#/definitions/monetaryPos",
          "description": "The apportioned Personal Allowance from annual allowance or reduced personal  allowance (if applicable)."
        }
      }
    },
    "incomeTax": {
      "description": "This object gives a breakdown of the Income Tax Calculation",
      "type": "object",
      "required": [
        "taxableIncome",
        "totalBeforeReliefs",
        "totalAfterReliefs",
        "totalAllowancesAndReliefs"
      ],
      "additionalProperties": false,
      "properties": {
        "taxableIncome": {
          "$ref": "#/definitions/monetaryPos",
          "description": "The total income subject to Income Tax calculation"
        },
        "payPensionsProfit": {
          "$ref": "#/definitions/incomeTaxCategory"
        },
        "savingsAndGains": {
          "$ref": "#/definitions/incomeTaxCategory"
        },
        "dividends": {
          "$ref": "#/definitions/incomeTaxCategory"
        },
        "totalBeforeReliefs": {
          "$ref": "#/definitions/monetaryPos",
          "description": "Total Income Tax before allowances and reliefs are applied"
        },
        "totalAllowancesAndReliefs": {
          "$ref": "#/definitions/monetaryPos",
          "description": "The total amount of allowances and reliefs applied"
        },
        "allowancesAndReliefs": {
          "$ref": "#/definitions/allowancesAndReliefs"
        },
        "totalAfterReliefs": {
          "$ref": "#/definitions/monetaryPos",
          "description": "Total Income tax after allowances and reliefs are applied. This value is compared  with totalAfterGiftAid (when generated) with the higher value taken forward as the  Income Tax amount."
        },
        "giftAid": {
          "$ref": "#/definitions/giftAid"
        },
        "totalAfterGiftAid": {
          "$ref": "#/definitions/monetaryPos",
          "description": "This is the total taxable value of Gift Aid (NB. it is not a running total).  This value is compared with totalAfterReliefs with the higher value taken forward as  the Income Tax amount; when this value is greater it indicates that the amount of  Gift Aid declared exceeds the amount of taxable Income, and therefore becomes the  Taxpayer liability"
        }
      }
    },
    "incomeTaxCategory": {
      "description": "An income tax category",
      "type": "object",
      "required": [
        "totalAmount",
        "taxableIncome",
        "band",
        "personalAllowanceUsed"
      ],
      "additionalProperties": false,
      "properties": {
        "totalAmount": {
          "$ref": "#/definitions/monetaryPos",
          "description": "Total amount of Income Tax associated to the Income Tax category"
        },
        "taxableIncome": {
          "$ref": "#/definitions/monetaryPos",
          "description": "Total amount of taxable income associated to the Income Tax category"
        },
        "band": {
          "$ref": "#/definitions/incomeTaxBands"
        },
        "personalAllowanceUsed": {
          "$ref": "#/definitions/monetaryPos",
          "description": "The amount of apportioned personal allowance offset against this Income Tax category"
        }
      }
    },
    "incomeTaxBands": {
      "description": "The banding array shows the tax banding applicable to an Income Tax category. Only bands  applicable to the calculation will be generated. (e.g a BRT taxpayer will not have bands  for HRT and ART). There will always be a minimum of 1 band if the array exists. The array  will be populated in ascending order of the tax bands. ",
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "rate",
          "income",
          "taxAmount"
        ],
        "properties": {
          "name": {
            "type": "string",
            "enum": [
              "ZRT",
              "SRT",
              "BRT",
              "IRT",
              "HRT",
              "ART"
            ],
            "description": "The name of the Tax band"
          },
          "rate": {
            "$ref": "#/definitions/percent",
            "description": "The tax band rate expressed as a percentage"
          },
          "threshold": {
            "$ref": "#/definitions/wholePounds",
            "description": "The upper threshold of the band. This will be inclusive of the gift Aid extender"
          },
          "apportionedThreshold": {
            "$ref": "#/definitions/wholePounds",
            "description": "The apportioned upper threshold of the band. This will be inclusive of the gift Aid extender"
          },
          "income": {
            "$ref": "#/definitions/monetaryPos",
            "description": "The amount of taxable income attributed to the tax band"
          },
          "taxAmount": {
            "$ref": "#/definitions/monetaryPos",
            "description": "The calculated amount of income tax for the band (bandIncome x bandRate)"
          }
        }
      }
    },
    "allowancesAndReliefs": {
      "type": "object",
      "description": "The allowances and reliefs used in the Income Tax calculation",
      "additionalProperties": false,
      "properties": {
        "propertyFinanceRelief": {
          "$ref": "#/definitions/monetaryPos",
          "description": "Relief against property finance costs"
        }
      }
    },
    "giftAid": {
      "type": "object",
      "description": "This object shows the amount Income Tax associated to the amount of Gift Aid being declared.  The actual Gift Aid benefit itself is reflected as a rate band extension  (see calcResult.annualAllowances.giftAidExtender). ",
      "required": [
        "paymentsMade",
        "rate",
        "taxableAmount"
      ],
      "additionalProperties": false,
      "properties": {
        "paymentsMade": {
          "$ref": "#/definitions/monetaryPos",
          "description": "The amount of gift aid payments made associated to the Tax Year."
        },
        "rate": {
          "$ref": "#/definitions/percent",
          "description": "The basic rate of tax that applies to Gift Aid"
        },
        "taxableAmount": {
          "$ref": "#/definitions/monetaryPos",
          "description": "The taxable amount of the Gift Aid payments made (i.e. paymentsMade x rate / 100)"
        }
      }
    },
    "nic": {
      "type": "object",
      "description": "This object defines the National Insurance Contributions involved in the calculation",
      "additionalProperties": false,
      "properties": {
        "class2": {
          "$ref": "#/definitions/nicClass2"
        },
        "class4": {
          "$ref": "#/definitions/nicClass4"
        }
      }
    },
    "nicClass2": {
      "type": "object",
      "description": "This object defines the NIC class 2 elements of the calculation",
      "required": [
        "amount",
        "weekRate",
        "weeks",
        "limit",
        "apportionedLimit"
      ],
      "additionalProperties": false,
      "properties": {
        "amount": {
          "$ref": "#/definitions/monetaryPos",
          "description": "Calculated amount of NIC Class 2"
        },
        "weekRate": {
          "$ref": "#/definitions/monetaryPos",
          "description": "The weekly rate for NIC Class 2"
        },
        "weeks": {
          "type": "number",
          "description": "The number of weeks applied in calculation"
        },
        "limit": {
          "$ref": "#/definitions/wholePounds",
          "description": "Annual limit for NIC Class 2"
        },
        "apportionedLimit": {
          "$ref": "#/definitions/wholePounds",
          "description": "Apportioned annual limit for NIC Class 2"
        }
      }
    },
    "nicClass4": {
      "type": "object",
      "description": "This object defines the NIC class 4 elements of the calculation",
      "required": [
        "totalAmount",
        "band"
      ],
      "additionalProperties": false,
      "properties": {
        "totalAmount": {
          "$ref": "#/definitions/monetaryPos",
          "description": "The total calculated amount of NIC Class 4"
        },
        "band": {
          "$ref": "#/definitions/nic4Bands"
        }
      }
    },
    "taxDeducted": {
      "type": "object",
      "description": "This details the tax deductions that apply to the calculation",
      "additionalProperties": false,
      "properties": {
        "ukLandAndProperty": {
          "$ref": "#/definitions/monetaryPos",
          "description": "Tax deductions for UK Land and Property"
        }
      }
    },
    "calcMessages": {
      "type": "array",
      "description": "A list of messages to provide additional context to the calculation",
      "minItems": 1,
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "text"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Defines message type (INFO, WARN)",
            "enum": [
              "INFO",
              "WARN"
            ]
          },
          "text": {
            "type": "string",
            "description": "message text"
          }
        }
      }
    },
    "previousCalc": {
      "type": "object",
      "description": "This object contains detail of the last calculation to be performed in the same tax year.  If there is no prior calculation this object will not be present.",
      "required": [
        "calcTimestamp",
        "calcID",
        "calcAmount"
      ],
      "additionalProperties": false,
      "properties": {
        "calcTimestamp": {
          "$ref": "#/definitions/timestampString",
          "description": "The timestamp of when the calculation was performed"
        },
        "calcID": {
          "$ref": "#/definitions/calcIdString",
          "description": "The calculation ID – this is either 8 digit value with leading zeros (legacy calculation ID) or a UUID from April 2018."
        },
        "calcAmount": {
          "$ref": "#/definitions/monetaryPosNeg"
        }
      }
    },
    "nic4Bands": {
      "type": "array",
      "description": "The banding array shows the banding applicable to NIC Class 4. Only bands applicable to the  calculation will be generated. There will always be a minimum of 1 band if the array exists.",
      "minItems": 1,
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "rate",
          "income",
          "amount"
        ],
        "properties": {
          "name": {
            "type": "string",
            "enum": [
              "ZRT",
              "BRT",
              "HRT"
            ],
            "description": "The name of the Tax band - \n  ZRT=Zero Rate; BRT=Basic Rate; HRT=Higher Rate"
          },
          "rate": {
            "$ref": "#/definitions/percent",
            "description": "The rate that applies to the band"
          },
          "threshold": {
            "$ref": "#/definitions/wholePounds",
            "description": "The band threshold"
          },
          "apportionedThreshold": {
            "$ref": "#/definitions/wholePounds",
            "description": "The apportioned threshold for the band"
          },
          "income": {
            "$ref": "#/definitions/monetaryPos",
            "description": "The calculated amount of NIC Class 4 for the band (band.income x band.rate)"
          },
          "amount": {
            "$ref": "#/definitions/monetaryPos"
          }
        }
      }
    },
    "annualAllowances": {
      "type": "object",
      "description": "This object defines the annual allowances used in the calculation",
      "required": [
        "personalAllowance"
      ],
      "additionalProperties": false,
      "properties": {
        "personalAllowance": {
          "$ref": "#/definitions/wholePounds",
          "description": "The full Personal Allowance applicable to the Tax Year"
        },
        "reducedPersonalAllowanceThreshold": {
          "$ref": "#/definitions/wholePounds",
          "description": "The income threshold at which the Personal Allowance is reduced"
        },
        "reducedPersonalisedAllowance": {
          "$ref": "#/definitions/wholePounds",
          "description": "Reduced annual personal allowance if annual (or estimated annual) income exceeds the  income threshold. Estimated annual income will be used for non-finalised calculations"
        },
        "giftAidExtender": {
          "$ref": "#/definitions/wholePounds",
          "description": "The amount by which the Rate band thresholds are extended by as a result of Gift Aid  claimed against this Tax Year"
        }
      }
    },
    "eoyEstimate": {
      "type": "object",
      "description": "This object gives the End of Year estimate for Income Tax. It will only be populated for  in-year calculations; it will not be populated as part of a crystallisation calculation.",
      "required": [
        "incomeSource",
        "totalTaxableIncome",
        "incomeTaxAmount",
        "nic2",
        "nic4",
        "totalNicAmount",
        "incomeTaxNicAmount"
      ],
      "additionalProperties": false,
      "properties": {
        "incomeSource": {
          "$ref": "#/definitions/eoyEstimateIncomeSources"
        },
        "totalTaxableIncome": {
          "$ref": "#/definitions/monetaryPos",
          "description": "Sum of estimated taxable income for all income sources"
        },
        "incomeTaxAmount": {
          "$ref": "#/definitions/monetaryPos",
          "description": "Calculated Income tax amount from estimated taxable income"
        },
        "nic2": {
          "$ref": "#/definitions/monetaryPos",
          "description": "Calculated NIC Class 2 from estimates"
        },
        "nic4": {
          "$ref": "#/definitions/monetaryPos",
          "description": "Calculated NIC Class 4 from estimates"
        },
        "totalNicAmount": {
          "$ref": "#/definitions/monetaryPos",
          "description": "Sum of National Insurance amounts"
        },
        "incomeTaxNicAmount": {
          "$ref": "#/definitions/monetaryPos",
          "description": "Total of calculated Income Tax and National Insurance from estimated annual taxable income"
        }
      }
    },
    "eoyEstimateIncomeSources": {
      "type": "array",
      "description": "An array of annualised estimated income by income source",
      "minItems": 1,
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "type",
          "taxableIncome",
          "supplied"
        ],
        "properties": {
          "id": {
            "$ref": "#/definitions/incomeSourceId"
          },
          "type": {
            "$ref": "#/definitions/incomeSourceType"
          },
          "taxableIncome": {
            "$ref": "#/definitions/monetaryPos",
            "description": "Estimated taxable income for source"
          },
          "supplied": {
            "type": "boolean",
            "description": "Indicates if the estimate taxable income is supplied by the taxpayer (true) or calculated (false)."
          },
          "finalised": {
            "type": "boolean",
            "description": "Indicates if the income source has been finalised for the tax year (only applies to self-employment and UK Property income types)."
          }
        }
      }
    },
    "calcSummary": {
      "type": "object",
      "description": "An object containing summary level data for the calculation",
      "required": [
        "regime",
        "incomeTax"
      ],
      "properties": {
        "nationalRegime": {
          "type": "string",
          "enum": [
            "UK",
            "Scotland"
          ],
          "description": "This defines the national tax rates and rules to be applied. Values are UK and Scotland."
        },
        "incomeTax": {
          "$ref": "#/definitions/monetaryPos",
          "description": "The amount of Income Tax calculated YTD"
        },
        "nic2": {
          "$ref": "#/definitions/monetaryPos",
          "description": "The amount of Class 2 National Insurance Contributions YTD"
        },
        "nic4": {
          "$ref": "#/definitions/monetaryPos",
          "description": "The amount of Class 4 National Insurance Contributions YTD"
        },
        "objectDetails": {
          "$ref": "#/definitions/objectDetails"
        }
      }
    },
    "objectDetails": {
      "type": "array",
      "description": "An array of contract Object IDs and associated obligation dates.",
      "items": {
        "required": [
          "incomeSourceID"
        ],
        "properties": {
          "incomeSourceID": {
            "$ref": "#/definitions/incomeSourceId"
          },
          "fromDate": {
            "$ref": "#/definitions/dateString",
            "description": "The start date of data capture"
          },
          "toDate": {
            "$ref": "#/definitions/dateString",
            "description": "The end date of data capture"
          },
          "finalised": {
            "type": "boolean",
            "description": "Indicates if the income source is finalised for the Tax Year"
          },
          "finalisedDate": {
            "$ref": "#/definitions/dateString",
            "description": "The date of finalisation for Income Source"
          }
        }
      }
    },
    "calcIdString": {
      "type": "string",
      "pattern": "^[0-9]{8}|[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
      "description": "The calculation ID – this is either 8 digit value with leading zeros (legacy calculation ID) or a UUID from April 2018."
    },
    "incomeSourceId": {
      "type": "string",
      "pattern": "^[A-Za-z0-9]{15}$",
      "description": "The unique identifier of the income source."
    },
    "incomeSourceType": {
      "type": "string",
      "enum": [
        "01",
        "02",
        "03",
        "04",
        "05",
        "06",
        "07",
        "08",
        "09",
        "10",
        "11",
        "12",
        "13",
        "14",
        "99"
      ],
      "description": "Indicates the income source type.  Values are - 01=Self-Employment, 02=UK Property, 03=FHL Property - EEA, 04=FHL Property - UK, 05=Employment, 06=Foreign income, 07=Dividends from foreign companies, 08=Trusts and Estates, 09=Interest from UK banks, building societies and securities etc., 10=Dividends from UK companies; 11=UK pensions and state benefits, 12=Gains on life insurance policies etc., 13=Share schemes, 14=Partnership, 99=Other income."
    },
    "dateString": {
      "description": "YYYY-MM-DD",
      "type": "string",
      "pattern": "^\\\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
    },
    "timestampString": {
      "description": "Standard timestamp format.",
      "type": "string",
      "format": "date-time"
    },
    "wholePounds": {
      "type": "number",
      "minimum": 0,
      "maximum": 99999999999999,
      "multipleOf": 1,
      "description": "Defines amounts given in whole pounds between 0 and 99,999,999,999,999"
    },
    "monetaryPos": {
      "type": "number",
      "minimum": 0,
      "maximum": 99999999999999.99,
      "multipleOf": 0.01,
      "description": "Defines a monetary value (to 2 decimal places), between 0 and 99,999,999,999,999.99"
    },
    "monetaryPosNeg": {
      "type": "number",
      "minimum": -99999999999999.99,
      "maximum": 99999999999999.99,
      "multipleOf": 0.01,
      "description": "Defines a monetary value (to 2 decimal places), between -99,999,999,999,999.99 and 99,999,999,999,999.99"
    },
    "percent": {
      "type": "number",
      "minimum": 0,
      "maximum": 99.99,
      "multipleOf": 0.01,
      "description": "Defines a percentage rate (to 2 decimal places), between 0.00 and 99.99."
    },
    "lastCalcOutput": {
      "type": "object",
      "required": [
        "calcID",
        "calcTimestamp",
        "calcAmount"
      ],
      "additionalProperties": false,
      "properties": {
        "calcID": {
          "$ref": "#/definitions/calcIdString",
          "description": "The calculation ID – this is either 8 digit value with leading zeros (legacy calculation ID) or a UUID from April 2018."
        },
        "calcTimestamp": {
          "$ref": "#/definitions/timestampString",
          "description": "The timestamp of when the calculation was performed"
        },
        "calcAmount": {
          "$ref": "#/definitions/monetaryPosNeg",
          "description": "The total amount calculated. This is the YTD total of Income Tax and National Insurance"
        },
        "crystallised": {
          "type": "boolean",
          "description": "Indicates if the calculation has been declared as crystallised"
        },
        "crystallisationTimestamp": {
          "description": "The timestamp at which crystallisation was declared",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "calcList": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": [
          "calcID",
          "calcTimestamp",
          "calcType",
          "calcAmount"
        ],
        "properties": {
          "calcID": {
            "$ref": "#/definitions/calcIdString",
            "description": "The calculation ID – this is either 8 digit value with leading zeros (legacy calculation ID) or a UUID from April 2018."
          },
          "calcTimestamp": {
            "$ref": "#/definitions/timestampString",
            "description": "Timestamp of when the calculation was performed"
          },
          "calcType": {
            "type": "string",
            "minLength": 2,
            "maxLength": 5,
            "description": "The type of calculation (e.g. \"it\"for Income tax)"
          },
          "year": {
            "type": "number",
            "minimum": 2016,
            "maximum": 9999,
            "description": "For year specific calculations this identifies a year (or Tax Year) to which the calculation relates in the format yyyy. For Tax Year it will always be the year ending (e.g. 2018 relates to Tax Year 2017-2018)"
          },
          "fromDate": {
            "$ref": "#/definitions/dateString",
            "description": "Defines the inclusive start date of the period to which the calculation data relates  in the format yyyy-mm-dd"
          },
          "toDate": {
            "$ref": "#/definitions/dateString",
            "description": "Defines the inclusive end date of the period to which the calculation data relates  in the format yyyy-mm-dd"
          },
          "calcAmount": {
            "$ref": "#/definitions/monetaryPosNeg",
            "description": "The total amount calculated. This is the YTD total of Income Tax and National Insurance"
          },
          "crystallised": {
            "type": "boolean",
            "description": "Indicates if the calculation has been declared as crystallised"
          },
          "crystalisationTimestamp": {
            "$ref": "#/definitions/timestampString",
            "description": "Timestamp of when the calculation was declared crystallised"
          }
        }
      }
    },
    "bvrMessages": {
      "type": "array",
      "description": "An array of BVR warning and error messages",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": [
          "id",
          "type",
          "text"
        ],
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^C[0-9]{5}$",
            "description": "BVR message ID"
          },
          "type": {
            "type": "string",
            "enum": [
              "ERR",
              "WARN"
            ],
            "description": "Type of message (Error or Warning)"
          },
          "text": {
            "type": "string",
            "description": "BVR message text"
          }
        }
      }
    },
    "crystallisation": {
      "description": "Crystallisation data items.",
      "required": [
        "crystallised",
        "crystallisationTimestamp"
      ],
      "properties": {
        "crystallised": {
          "type": "boolean",
          "description": "Defines if crystallisation has been declared against this calculation"
        },
        "crystallisationTimestamp": {
          "$ref": "#/definitions/timestampString",
          "description": "The timestamp of when crystallisation was declared"
        }
      }
    },
    "errorResponse": {
      "type": "object",
      "required": [
        "errorCode",
        "errorDescription"
      ],
      "description": "Common error response data. Possible values - \n 3000 - Input schema validation errors",
      "additionalProperties": false,
      "properties": {
        "errorCode": {
          "type": "string",
          "enum": [
            "3000"
          ]
        },
        "errorDescription": {
          "type": "string"
        }
      }
    },
    "incomeSources": {
      "type": "array",
      "description": "An array of income sources used to perform teh calculation",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": [
          "incomeSourceId",
          "incomeSourceType",
          "fromDate",
          "toDate",
          "latestTimestamp"
        ],
        "additionalProperties": false,
        "properties": {
          "incomeSourceId": {
            "$ref": "#/definitions/incomeSourceId"
          },
          "incomeSourceType": {
            "$ref": "#/definitions/incomeSourceType"
          },
          "fromDate": {
            "$ref": "#/definitions/dateString",
            "description": "The date from which the income source data applies to the Tax Year"
          },
          "toDate": {
            "$ref": "#/definitions/dateString",
            "description": "The date to which the income source data applies to the Tax Year"
          },
          "latestTimestamp": {
            "$ref": "#/definitions/timestampString"
          }
        }
      }
    }
  }
}
